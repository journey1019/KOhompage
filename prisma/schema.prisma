// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  password String // << 추가
  email    String  @unique
  name     String?
  posts    Post[]
  role     Role    @default(USER)
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
}

enum Role {
  USER
  ADMIN
}

// Resource
model Resource {
  id          Int      @id @default(autoincrement())
  date        DateTime
  contentType String
  title       String   @unique
  subtitle    String
  tags        String // 예: "Satellite,AIS"
  hideTag     String // 예: "위성,글로벌"
  solutionTag String // 예: "NMS,OGx/IDP"
  form        String // 예: "pdf" or "link" or "page"
  image       String
  path        String
  use         Boolean  @default(true)
  html        String? // tiptap으로 작성된 HMTL
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Tag         Tag?     @relation(fields: [tagId], references: [id])
  tagId       Int?
}

// Hardware
model Hardware {
  id          Int      @id @default(autoincrement())
  date        DateTime
  category    String
  title       String   @unique
  subtitle    String
  description String?
  tags        String // 예: "Satellite,AIS"
  hideTag     String // 예: "위성,글로벌"
  solutionTag String // 예: "NMS,OGx/IDP"
  imageSrc    String
  slug        String
  path        String
  use         Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Resource Content Type Filtering
model ResourceFilterOption {
  id        Int      @id @default(autoincrement())
  type      String // 'contentType' 또는 'solution'
  label     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Hardware Content Type Filtering
model HardwareFilterOption {
  id        Int      @id @default(autoincrement())
  type      String // 'categoryOptions' || 'typeOptions' || 'networkOptions'
  label     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id       Int        @id @default(autoincrement())
  name     String
  type     String
  Resource Resource[]

  @@unique([name, type])
}
