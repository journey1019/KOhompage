generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  password String
  email    String  @unique
  name     String?
  role     String  @default("USER")
  posts    Post[]
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  Int
  author    User    @relation(fields: [authorId], references: [id])
}

model Resource {
  id          Int      @id @default(autoincrement())
  date        DateTime
  contentType String
  title       String   @unique
  subtitle    String
  tags        String
  hideTag     String
  solutionTag String
  form        String
  image       String
  path        String
  use         Boolean  @default(true)
  html        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tagId       Int?
  Tag         Tag?     @relation(fields: [tagId], references: [id])
}

model Hardware {
  id          Int      @id @default(autoincrement())
  date        DateTime
  category    String
  title       String   @unique
  subtitle    String
  description String?
  tags        String
  hideTag     String
  solutionTag String
  imageSrc    String
  slug        String
  path        String
  use         Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ResourceFilterOption {
  id        Int      @id @default(autoincrement())
  type      String
  label     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HardwareFilterOption {
  id        Int      @id @default(autoincrement())
  type      String
  label     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id       Int        @id @default(autoincrement())
  name     String
  type     String // 'tags' or 'solutionTag'
  scope    String // 'resource' or 'hardware'
  Resource Resource[]

  @@unique([name, type, scope])
}
